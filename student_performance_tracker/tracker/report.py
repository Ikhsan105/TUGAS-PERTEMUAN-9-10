"""
Modul Report

Berisi fungsi utilitas untuk membuat dan menyimpan
laporan teks (Markdown).
"""
import os

def build_markdown_report(records):
    """
    Membuat tabel rekap dalam format Markdown[cite: 169].
    
    Args:
        records (list): List of dictionaries dari RekapKelas.rekap().
        
    Returns:
        str: String berisi tabel Markdown lengkap.
    """
    # Header tabel [cite: 216]
    header = [
        "# Rekap Nilai Mahasiswa\n",
        "| NIM | Nama | Hadir (%) | Nilai Akhir | Predikat |",
        "|---|---|---:|---:|:---:|" # Penyesuaian perataan kolom
    ]
    
    rows = []
    for rec in records:
        # Format nilai akhir menjadi 2 desimal
        nilai_str = f"{rec['nilai_akhir']:.2f}"
        hadir_str = f"{rec['hadir']:.1f}"
        
        rows.append(
            f"| {rec['nim']} | {rec['nama']} | {hadir_str} | {nilai_str} | {rec['predikat']} |"
        )
        
    # Footer [cite: 222]
    footer = [
        "\n---\n",
        "*Generated by student_performance_tracker*"
    ]
    
    return "\n".join(header + rows + footer)


def save_text(path, content):
    """
    Menyimpan konten string ke sebuah file[cite: 170].
    Akan membuat direktori jika belum ada.
    
    Args:
        path (str): Lokasi file tujuan (mis. 'out/report.md').
        content (str): Konten teks yang akan disimpan.
    """
    try:
        # Memastikan direktori 'out' ada
        os.makedirs(os.path.dirname(path), exist_ok=True)
        
        with open(path, 'w', encoding='utf-8') as f:
            f.write(content)
        print(f"Laporan berhasil disimpan ke: {path}")
    except IOError as e:
        print(f"Error: Gagal menyimpan file. {e}")